{"version":3,"file":"static/js/253.25678802.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/BooksList/BookList.styled.jsx","components/CardWrapper/CardWrapper.styled.jsx","components/CardWrapper/CardWrapper.jsx","components/BooksList/BooksList.jsx","components/Slider/Slider.styled.jsx","components/Slider/Slider.jsx","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\nimport { DebounceInput } from 'react-debounce-input';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  /* max-width: 400px; */\n  /* justify-content: center; */\n  align-items: center;\n  position: relative;\n  text-transform: uppercase;\n\n  max-width: 300px;\n  margin: 0 auto;\n  margin-bottom: 16px;\n\n  form {\n    width: 100%;\n  }\n\n  ul {\n    position: absolute;\n    z-index: 99;\n    left: 0;\n    top: 45px;\n    width: 100%;\n    background-color: white;\n    box-shadow: 0 5px 5px rgb(97, 111, 85);\n    border-radius: 5px;\n    max-height: 200px;\n    height: auto;\n    overflow: auto;\n\n    li {\n      padding: 5px 10px;\n      text-transform: lowercase;\n\n      :hover {\n        background-color: #e7ecec;\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nexport const Input = styled(DebounceInput)`\n  width: 100%;\n  /* height: 45px; */\n  padding: 8px 32px 8px 12px;\n  border-radius: 20px;\n  border-color: rgb(97, 111, 85);\n  font: inherit;\n  background-color: transparent;\n  outline: none;\n\n  :focus {\n    /* outline: 1px solid rgb(97, 111, 85); */\n    box-shadow: 0 5px 5px rgb(97, 111, 85);\n  }\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 7px;\n`;\n","import { Wrapper, Icon, Input } from './SearchBox.styled';\nimport { useState } from 'react';\n// import Select from 'react-select';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchBook } from 'fetch';\nimport { nanoid } from 'nanoid';\n// import { useEffect } from 'react';\n// import { useRef } from 'react';\n\n// let arr = [];\n// const getInitialBooks = name => {\n//   console.log('name:', name);\n\n//   const fetchData = async () => {\n//     try {\n//       if (name) {\n//         const data = await getSearchBook(name);\n//         console.log(data);\n//         if (data) {\n//           arr = data;\n//           return;\n//         }\n//         // return [];\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   if (name) {\n//     console.log('yes');\n\n//     fetchData();\n//     console.log(arr);\n//     // return arr;\n//     // return;\n//   }\n\n//   console.log('no');\n//   return [];\n// };\n\nexport const SearchBox = ({ getVisibleBooks }) => {\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const bookName = searchParams.get('name') ?? '';\n  const [isOpen, setIsOpen] = useState(true);\n\n  const [books, setBooks] = useState([]);\n\n  // const inputEl = useRef(0);\n\n  // const handleClickSelect = e => {\n  //   setIsOpen(!isOpen);\n  //   const name = e.target.textContent;\n  //   const nextParams = name !== '' ? { name } : {};\n  //   setSearchParams(nextParams);\n  //   hlandleSearch(e.target.textContent);\n  //   // console.log(bookName);\n  // };\n\n  // useEffect(() => {\n  //   // let a = inputEl.current;\n  //   // console.log(a);\n  //   // console.log(inputEl.current);\n  //   // if (bookName) {\n  //   // console.log('useEffect');\n  //   // }\n\n  //   const fetchData = async () => {\n  //     try {\n  //       if (bookName) {\n  //         const data = await getSearchBook(bookName);\n  //         // console.log(data);\n  //         if (data) {\n  //           setBooks(data);\n\n  //           if (bookName)\n  //             if (inputEl.current === 0) {\n  //               console.log(0);\n  //               // setIsOpen(false);\n  //               // getVisibleBooks(data);\n  //             }\n  //           return;\n  //         }\n  //         return setBooks([]);\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n\n  //   fetchData();\n\n  //   return () => {\n  //     inputEl.current += 1;\n  //     // console.log(inputEl);\n  //   };\n  // }, [bookName]);\n\n  const handleInputClick = () => {\n    setIsOpen(true);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsOpen(!isOpen);\n    getVisibleBooks(bookName);\n    // hlandleSearch(bookName);\n    // getVisibleBooks(books);\n  };\n\n  const handleChangeInput = e => {\n    // console.log('handleChangeInput:');\n    // e.target.value;\n    const name = e.target.value;\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n\n    const fetchData = async () => {\n      try {\n        if (name) {\n          const data = await getSearchBook(name);\n          // console.log(data);\n          if (data) {\n            return setBooks(data);\n          }\n          return setBooks([]);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  };\n\n  return (\n    <Wrapper>\n      <Icon />\n      <form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"find book...\"\n          debounceTimeout={1000}\n          autoFocus\n          type=\"text\"\n          value={bookName}\n          onChange={handleChangeInput}\n          onClick={handleInputClick}\n        />\n        {bookName && isOpen ? (\n          <ul>\n            {books.map(book => {\n              return (\n                <li key={nanoid()}>\n                  {/* {book.volumeInfo.title} */}\n                  <Link to={`${book.id}`} state={{ from: location }}>\n                    {book.volumeInfo.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        ) : null}\n      </form>\n    </Wrapper>\n  );\n};\n\n// const options = [\n//   { value: 'chocolate', label: 'Chocolate' },\n//   { value: 'strawberry', label: 'Strawberry' },\n//   { value: 'vanilla', label: 'Vanilla' },\n// ];\n\n// export const SearchB = () => {\n//   const [selectedOption, setSelectedOption] = useState('');\n//   // const [value, setSelectedOption] = useState(null);\n\n//   const handleChange = value => {\n//     // console.log(value);\n//     if (value !== '') {\n//       setSelectedOption(value);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Select\n//         isSearchable\n//         // value={value}\n//         // inputValue={selectedOption}\n//         defaultValue={selectedOption}\n//         onChange={handleChange}\n//         options={options}\n//         onInputChange={e => {\n//           // if (e !== '') {\n//           setSelectedOption(e);\n//           // }\n//           console.log(e);\n//         }}\n//         // menuIsOpen={true}\n//         // onInputChange={(e, m) => {\n//         //   if (e === '') {\n//         //     // e.preventDefault();\n//         //     console.log(m);\n//         //   }\n//         // }}\n//       />\n//     </div>\n//   );\n// };\n","import styled from 'styled-components';\n\n/*export const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`; */\n\nexport const List = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  /* grid-template-columns: repeat(auto-fill, minmax(250px, auto)); */\n  gap: 10px;\n\n  li {\n    text-align: center;\n    border-radius: 5px;\n\n    img {\n      object-fit: cover;\n      transition: all 150ms ease-out;\n    }\n\n    :hover img {\n      transform: scale(1.05);\n      /* box-shadow: 0 0 10px #242124; */\n    }\n\n    :hover div::after {\n      opacity: 0;\n    }\n  }\n`;\n\n// export const SliderWrapper = styled.div`\n//   background-color: rgba(97, 111, 85, 0.926);\n//   border-radius: 5px;\n//   padding: 30px;\n//   h2 {\n//     margin-bottom: 20px;\n//   }\n\n//   h3 {\n//     /* padding: 20px; */\n//     background-color: rgb(97, 111, 85);\n//   }\n// `;\n\nexport const SliderItem = styled.div`\n  /* margin-right: 10px; */\n  /* padding: px; */\n  /* background-color: rgb(97, 111, 85); */\n`;\n","import styled from 'styled-components';\n\nexport const CardWrapperBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  p {\n    margin-top: 10px;\n    text-align: center;\n\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n\n  :hover div::after {\n    opacity: 1;\n  }\n`;\n\nexport const WrapperBookImg = styled.div`\n  height: 200px;\n  position: relative;\n  /* background-color: #fff;\n  padding: 10px 30px; */\n\n  /* width: 135px; */\n  border-radius: 5px;\n\n  img {\n    text-align: center;\n    border-radius: 5px;\n  }\n  overflow: hidden;\n\n  ::after {\n    content: 'Quick View';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 128px;\n    /* transform: translate(-50%, -50%); */\n    opacity: 0;\n    background: linear-gradient(transparent, 5%, rgb(97, 111, 85));\n    /* background-color: rgba(97, 111, 85, 0.695); */\n    color: white;\n    padding: 20px 10px 10px 10px;\n    /* border-radius: 5px; */\n    transition: opacity 0.3s ease-in-out;\n  }\n\n  /* :hover::after {\n    opacity: 1;\n  } */\n`;\n","import { CardWrapperBlock, WrapperBookImg } from './CardWrapper.styled';\n\nimport defaultImg from '../../img/bookPlaceholder.png';\n\nexport const CardWrapper = ({ book }) => {\n  return (\n    <CardWrapperBlock>\n      <WrapperBookImg>\n        {book.volumeInfo.imageLinks ? (\n          <img\n            src={book.volumeInfo.imageLinks.thumbnail}\n            alt=\"book\"\n            // width={135}\n          />\n        ) : (\n          <img src={defaultImg} alt=\"book\" width={135} />\n        )}\n      </WrapperBookImg>\n      {/* <span>Это пример изображения</span> */}\n\n      <p title={book.volumeInfo.title}> {book.volumeInfo.title}</p>\n    </CardWrapperBlock>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n// import Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nimport {\n  List,\n  // SliderItem,\n  // SliderWrapper,\n} from 'components/BooksList/BookList.styled';\nimport { CardWrapper } from 'components/CardWrapper/CardWrapper';\n// import { SliderBlock } from 'components/Slider/Slider';\n// import { useEffect } from 'react';\n// import { useState } from 'react';\n\nexport const BookList = ({ books }) => {\n  const location = useLocation();\n  // const [bestsellers, setBestsellers] = useState([]);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const data = await fetch();\n  //       console.log(data);\n  //       if (data) {\n  //         setBestsellers(data);\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  return (\n    <>\n      <List>\n        {books.map(book => {\n          // console.log(book.primary_isbn10);\n          return (\n            <li key={book.etag}>\n              <Link to={`${book.id}`} state={{ from: location }}>\n                <CardWrapper book={book} />\n              </Link>\n            </li>\n          );\n        })}\n      </List>\n      {/* <SliderBlock books={bestsellers} /> */}\n\n      {/* <SliderWrapper>\n        <h2> BESTSELLERS</h2>\n        <Slider {...settings}>\n          {books.map(book => {\n            // console.log(book.primary_isbn10);\n            return (\n              <SliderItem key={book.etag}>\n                <Link to={`${book.id}`} state={{ from: location }}>\n                  <CardWrapper book={book} />\n                </Link>\n              </SliderItem>\n            );\n          })}\n        </Slider>\n      </SliderWrapper> */}\n    </>\n  );\n};\n\n// {books.map(book => {\n//   // console.log(book.primary_isbn10);\n//   return (\n//     <li key={book.etag} onClick={handleClickSelect}>\n//       <Link to={`${book.id}`} state={{ from: location }}>\n//         <CardWrapper book={book} />\n//       </Link>\n//     </li>\n//   );\n// })}\n","import styled from 'styled-components';\n\nexport const SliderWrapper = styled.div`\n  /* background-color: rgba(97, 111, 85, 0.926); */\n  border-radius: 5px;\n  padding: 30px;\n  h2 {\n    margin-bottom: 15px;\n  }\n\n  h3 {\n    /* padding: 20px; */\n    background-color: rgb(97, 111, 85);\n  }\n`;\n","import Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { SliderWrapper } from './Slider.styled';\nimport { Link } from 'react-router-dom';\nimport { CardWrapper } from 'components/CardWrapper/CardWrapper';\n\nfunction SampleNextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{\n        ...style,\n        display: 'block',\n        padding: '100px 10px',\n      }}\n      onClick={onClick}\n    />\n  );\n}\n\nexport const SliderBlock = ({ books }) => {\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 1000,\n    slidesToShow: 5,\n    slidesToScroll: 5,\n    initialSlide: 0,\n    nextArrow: <SampleNextArrow />,\n    prevArrow: <SampleNextArrow />,\n\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 4,\n          // infinite: true,\n          // dots: true,\n        },\n      },\n      {\n        breakpoint: 900,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 4,\n          // infinite: true,\n          // dots: true,\n        },\n      },\n      {\n        breakpoint: 800,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          // infinite: true,\n          // dots: true,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          speed: 500,\n          // initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          speed: 500,\n          // infinite: true,\n          // dots: true,\n        },\n      },\n    ],\n\n    appendDots: dots => (\n      <div\n        style={{\n          maxHeight: 20,\n          overflow: 'hidden',\n        }}\n      >\n        <ul style={{ margin: '0px' }}> {dots} </ul>\n      </div>\n    ),\n  };\n\n  return (\n    <SliderWrapper>\n      <h2> BESTSELLERS</h2>\n      <Slider {...settings}>\n        {books.map(book => {\n          // console.log(book.primary_isbn10);\n          return (\n            <div key={book.etag}>\n              <Link to={`${book.id}`}>\n                <CardWrapper book={book} />\n              </Link>\n            </div>\n          );\n        })}\n      </Slider>\n    </SliderWrapper>\n  );\n};\n","// import { Header } from 'components/main/Header/Header';\n// import { fetch } from 'fetch';\nimport { useEffect, useState } from 'react';\n\n// import { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { BookList } from 'components/BooksList/BooksList';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetch, getSearchBook } from 'fetch';\nimport { SliderBlock } from 'components/Slider/Slider';\n// import { getSearchBook } from 'fetch';\n// import { Loader } from 'components/Loader';\n\nconst Home = () => {\n  const [books, setBooks] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n  const initialName = searchParams.get('name') ?? '';\n  const [bookName, setBookName] = useState(initialName);\n  const [bestsellers, setBestsellers] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetch();\n        // console.log(data);\n        if (data) {\n          setBestsellers(data);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // const updateQueryString = e => {\n  //   const name = e.target.value;\n  //   const nextParams = name !== '' ? { name } : {};\n  //   setSearchParams(nextParams);\n  // };\n\n  useEffect(() => {\n    // setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        if (bookName) {\n          const data = await getSearchBook(bookName);\n          // console.log(data);\n          if (data) {\n            setBooks(data);\n            // setIsLoading(false);\n            return;\n          }\n          return setBooks([]);\n        }\n        // else {\n        //   const data = await fetch();\n        //   // console.log(data);\n\n        //   if (data) {\n        //     setBooks(data);\n        //     // setIsLoading(false);\n        //   }\n        // }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [bookName]);\n\n  const handleVisibleBooks = value => {\n    console.log(value);\n    // setBooks(value);\n    setBookName(value);\n  };\n\n  return (\n    <main>\n      <SearchBox\n        // books={books}\n        getVisibleBooks={handleVisibleBooks}\n        // onChange={updateQueryString}\n      />\n\n      {books.length === 0 && <SliderBlock books={bestsellers} />}\n\n      {/* <img src={require('img/main.gif')} alt=\"main\" /> */}\n\n      {books.length !== 0 && <BookList books={books} />}\n      {/* <SearchB /> */}\n      {/* <SearchBox bookName={bookName} onChange={updateQueryString} />\n      {isLoading && <Loader />}\n      {!isLoading && books.length !== 0 && <BookList books={books} />} */}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["Wrapper","styled","Input","DebounceInput","Icon","HiSearch","SearchBox","getVisibleBooks","location","useLocation","useSearchParams","searchParams","setSearchParams","bookName","get","useState","isOpen","setIsOpen","books","setBooks","onSubmit","e","preventDefault","placeholder","debounceTimeout","autoFocus","type","value","onChange","name","target","fetchData","getSearchBook","data","console","log","onClick","map","book","to","id","state","from","volumeInfo","title","nanoid","List","CardWrapperBlock","WrapperBookImg","CardWrapper","imageLinks","src","thumbnail","alt","defaultImg","width","BookList","etag","SliderWrapper","SampleNextArrow","props","className","style","display","padding","SliderBlock","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","nextArrow","prevArrow","responsive","breakpoint","appendDots","maxHeight","overflow","margin","initialName","setBookName","bestsellers","setBestsellers","useEffect","fetch","length"],"sourceRoot":""}