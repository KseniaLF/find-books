{"version":3,"file":"static/js/410.1d2343f8.chunk.js","mappings":"2JAmDA,UA7CmB,WAmCjB,OACE,iCACE,uDADF,2BAQH,C","sources":["pages/SearchPage.jsx"],"sourcesContent":["// import { useSearchParams } from 'react-router-dom';\n// import { SearchBox } from 'components/SearchBox/SearchBox';\n// import { useEffect, useState } from 'react';\n// import { BookList } from 'components/BooksList/BooksList';\n// import { getSearchBook } from 'fetch';\n\nconst SearchPage = () => {\n  // const [books, setBooks] = useState([]);\n\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // const bookName = searchParams.get('name') ?? '';\n\n  // const updateQueryString = name => {\n  //   const nextParams = name !== '' ? { name } : {};\n  //   setSearchParams(nextParams);\n  // };\n\n  // const visibleBooks = books.filter(book => {\n  //   return book.volumeInfo.title.toLowerCase().includes(bookName.toLowerCase());\n  // });\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       if (bookName) {\n  //         // console.log(bookName);\n  //         const data = await getSearchBook(bookName);\n  //         // console.log(data);\n  //         if (data) {\n  //           return setBooks(data);\n  //         }\n  //         return setBooks([]);\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, [bookName]);\n\n  return (\n    <>\n      <p>Hi, this is your collection</p>\n      no books in collection\n      {/* <SearchBox bookName={bookName} onChange={updateQueryString} /> */}\n      {/* {books.length !== 0 && <BookList books={visibleBooks} />} */}\n      {/* {books === null && <p>NO RESULTS</p>} */}\n    </>\n  );\n};\nexport default SearchPage;\n"],"names":[],"sourceRoot":""}