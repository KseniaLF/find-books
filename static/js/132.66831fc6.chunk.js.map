{"version":3,"file":"static/js/132.66831fc6.chunk.js","mappings":"qSAGaA,EAAUC,EAAAA,GAAAA,IAAH,sPAaPC,EAAQD,EAAAA,GAAAA,MAAH,wSAcLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+F,SC5BJI,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,KACA,SAACD,EAAD,CACEM,WAAS,EACTC,KAAK,OACLC,MAAOJ,EACPC,SAAU,SAAAI,GAAC,OAAIJ,EAASI,EAAEC,OAAOF,MAAtB,MAIlB,E,UCAYG,EAAOZ,EAAAA,GAAAA,GAAH,wdCZJa,EAAmBb,EAAAA,GAAAA,IAAH,qKAWhBc,EAAiBd,EAAAA,GAAAA,IAAH,gI,UCTde,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5B,OACE,UAACH,EAAD,YACE,SAACC,EAAD,UACGE,EAAKC,WAAWC,YACf,gBACEC,IAAKH,EAAKC,WAAWC,WAAWE,UAChCC,IAAI,OACJC,MAAO,OAGT,gBAAKH,IAAKI,EAAYF,IAAI,OAAOC,MAAO,SAI5C,6BAAKN,EAAKC,WAAWO,WAG1B,ECjBYC,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAChB,EAAD,UACGc,EAAMG,KAAI,SAAAb,GAET,OACE,yBACE,SAAC,KAAD,CAAMc,GAAE,UAAKd,EAAKe,IAAMC,MAAO,CAAEC,KAAMN,GAAvC,UACE,SAACZ,EAAD,CAAaC,KAAMA,OAFdA,EAAKkB,KAMjB,KAGN,E,UC+CD,EA3Da,WAAO,IAAD,EACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOT,EAAP,KAAcU,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpC,EAAQ,UAAGmC,EAAaE,IAAI,eAApB,QAA+B,GA6C7C,OA/BAC,EAAAA,EAAAA,YAAU,WACRL,GAAa,GAEb,IAAMM,EAAS,mCAAG,mGAEVvC,EAFU,kCAGOwC,EAAAA,EAAAA,IAAcxC,GAHrB,YAGNyC,EAHM,+BAMVV,EAASU,GACTR,GAAa,GAPH,mDAULF,EAAS,KAVJ,0BAYOW,EAAAA,EAAAA,MAZP,SAYND,EAZM,UAgBVV,EAASU,GACTR,GAAa,IAjBH,0DAqBdU,QAAQC,IAAR,MArBc,0DAAH,qDAyBfL,GACD,GAAE,CAACvC,KAGF,6BACE,SAACD,EAAD,CAAWC,SAAUA,EAAUC,SA7CT,SAAA4C,GAExBT,EAD4B,KAATS,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,IA2CIb,IAAa,SAACc,EAAA,EAAD,KACZd,GAA8B,IAAjBX,EAAM0B,SAAgB,SAAC3B,EAAD,CAAUC,MAAOA,MAG3D,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/BooksList/BookList.styled.jsx","components/CardWrapper/CardWrapper.styled.jsx","components/CardWrapper/CardWrapper.jsx","components/BooksList/BooksList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  /* max-width: 400px; */\n  /* justify-content: center; */\n  align-items: center;\n  position: relative;\n  text-transform: uppercase;\n\n  max-width: 200px;\n  margin: 0 auto;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 12px;\n  border-radius: 20px;\n  border-color: rgb(97, 111, 85);\n  font: inherit;\n  background-color: transparent;\n  outline: none;\n\n  :focus {\n    /* outline: 1px solid rgb(97, 111, 85); */\n    box-shadow: 0 5px 5px rgb(97, 111, 85);\n  }\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 7px;\n`;\n","import { Wrapper, Icon, Input } from './SearchBox.styled';\n\nexport const SearchBox = ({ bookName, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        autoFocus\n        type=\"text\"\n        value={bookName}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\n/*export const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`; */\n\nexport const List = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  /* grid-template-columns: repeat(auto-fill, minmax(250px, auto)); */\n  gap: 10px;\n\n  li {\n    text-align: center;\n    border-radius: 5px;\n\n    img {\n      object-fit: cover;\n      transition: all 150ms ease-out;\n    }\n\n    :hover img {\n      transform: scale(1.05);\n      /* box-shadow: 0 0 10px #242124; */\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CardWrapperBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  p {\n    margin-top: 10px;\n  }\n`;\n\nexport const WrapperBookImg = styled.div`\n  width: 135px;\n  border-radius: 5px;\n  text-align: center;\n\n  img {\n    border-radius: 5px;\n  }\n`;\n","import { CardWrapperBlock, WrapperBookImg } from './CardWrapper.styled';\n\nimport defaultImg from '../../img/bookPlaceholder.png';\n\nexport const CardWrapper = ({ book }) => {\n  return (\n    <CardWrapperBlock>\n      <WrapperBookImg>\n        {book.volumeInfo.imageLinks ? (\n          <img\n            src={book.volumeInfo.imageLinks.thumbnail}\n            alt=\"book\"\n            width={135}\n          />\n        ) : (\n          <img src={defaultImg} alt=\"book\" width={135} />\n        )}\n      </WrapperBookImg>\n\n      <p> {book.volumeInfo.title}</p>\n    </CardWrapperBlock>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nimport { List } from 'components/BooksList/BookList.styled';\nimport { CardWrapper } from 'components/CardWrapper/CardWrapper';\n\nexport const BookList = ({ books }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {books.map(book => {\n        // console.log(book.primary_isbn10);\n        return (\n          <li key={book.etag}>\n            <Link to={`${book.id}`} state={{ from: location }}>\n              <CardWrapper book={book} />\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","// import { Header } from 'components/main/Header/Header';\nimport { fetch } from 'fetch';\nimport { useEffect, useState } from 'react';\n\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { BookList } from 'components/BooksList/BooksList';\nimport { getSearchBook } from 'fetch';\nimport { Loader } from 'components/Loader';\n\nconst Home = () => {\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const bookName = searchParams.get('name') ?? '';\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  // const visibleBooks = books.filter(book => {\n  //   if (bookName || bookName === '') {\n  //     return book;\n  //   }\n  //   return book.volumeInfo.title.toLowerCase().includes(bookName.toLowerCase());\n  // });\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        if (bookName) {\n          const data = await getSearchBook(bookName);\n          // console.log(data);\n          if (data) {\n            setBooks(data);\n            setIsLoading(false);\n            return;\n          }\n          return setBooks([]);\n        } else {\n          const data = await fetch();\n          // console.log(data);\n\n          if (data) {\n            setBooks(data);\n            setIsLoading(false);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [bookName]);\n\n  return (\n    <main>\n      <SearchBox bookName={bookName} onChange={updateQueryString} />\n      {isLoading && <Loader />}\n      {!isLoading && books.length !== 0 && <BookList books={books} />}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["Wrapper","styled","Input","Icon","HiSearch","SearchBox","bookName","onChange","autoFocus","type","value","e","target","List","CardWrapperBlock","WrapperBookImg","CardWrapper","book","volumeInfo","imageLinks","src","thumbnail","alt","width","defaultImg","title","BookList","books","location","useLocation","map","to","id","state","from","etag","useState","setBooks","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchData","getSearchBook","data","fetch","console","log","name","Loader","length"],"sourceRoot":""}