{"version":3,"file":"static/js/132.acfc7653.chunk.js","mappings":"6SAGaA,EAAUC,EAAAA,GAAAA,IAAH,0KASPC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+F,SChBJI,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,KACA,SAACD,EAAD,CACEM,WAAS,EACTC,KAAK,OACLC,MAAOJ,EACPC,SAAU,SAAAI,GAAC,OAAIJ,EAASI,EAAEC,OAAOF,MAAtB,MAIlB,E,UCAYG,GAZYZ,EAAAA,GAAAA,GAAH,sPAYFA,EAAAA,GAAAA,GAAH,0iBCZJa,EAAmBb,EAAAA,GAAAA,IAAH,ymBAiChBD,EAAUC,EAAAA,GAAAA,IAAH,8MAYPc,EAAiBd,EAAAA,GAAAA,IAAH,qSAkBde,EAAqBf,EAAAA,GAAAA,IAAH,oGAOlBgB,EAAiBhB,EAAAA,GAAAA,IAAH,mK,UC9DdiB,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5B,OACE,UAACL,EAAD,YACE,UAAC,EAAD,YACE,0BACE,SAACC,EAAD,UACGI,EAAKC,WAAWC,YACf,gBACEC,IAAKH,EAAKC,WAAWC,WAAWE,UAChCC,IAAI,OACJC,MAAO,OAGT,gBAAKH,IAAKI,EAAYF,IAAI,OAAOC,MAAO,WAK9C,UAACT,EAAD,YACE,6BAAKG,EAAKC,WAAWO,UACrB,4BACE,oCAAYR,EAAKC,WAAWQ,YAC5B,yCAAiBT,EAAKC,WAAWS,eACjC,uCAAeV,EAAKC,WAAWU,cAC/B,2CAAmBX,EAAKC,WAAWW,kBACnC,uCAAeZ,EAAKC,WAAWY,cAC/B,sCAAcb,EAAKC,WAAWa,sBAOpC,UAAChB,EAAD,YACE,8CACA,mBAAQR,KAAK,SAAb,+BAIP,EC5CYyB,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACxB,EAAD,UACGsB,EAAMG,KAAI,SAAAnB,GAET,OACE,yBACE,SAAC,KAAD,CAAMoB,GAAE,UAAKpB,EAAKqB,IAAMC,MAAO,CAAEC,KAAMN,GAAvC,UAOE,SAAClB,EAAD,CAAaC,KAAMA,OARdA,EAAKwB,KAYjB,KAGN,ECoCD,EAvDa,WAAO,IAAD,EACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOT,EAAP,KAAcU,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM1C,EAAQ,UAAGyC,EAAaE,IAAI,eAApB,QAA+B,GAwC7C,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,mGAEV7C,EAFU,kCAGO8C,EAAAA,EAAAA,IAAc9C,GAHrB,YAGN+C,EAHM,iDAMHR,EAASQ,IANN,gCAQLR,EAAS,KARJ,0BAUOS,EAAAA,EAAAA,MAVP,aAUND,EAVM,kDAcHR,EAASQ,IAdN,0DAkBdE,QAAQC,IAAR,MAlBc,0DAAH,qDAsBfL,GACD,GAAE,CAAC7C,KAGF,6BACE,SAACD,EAAD,CAAWC,SAAUA,EAAUC,SAxCT,SAAAkD,GAExBT,EAD4B,KAATS,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,IAsCqB,IAAjBtB,EAAMuB,SAAgB,SAACxB,EAAD,CAAUC,MAAOA,MAM7C,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/BooksList/BookList.styled.jsx","components/CardWrapper/CardWrapper.styled.jsx","components/CardWrapper/CardWrapper.jsx","components/BooksList/BooksList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  /* max-width: 400px; */\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Icon, Input } from './SearchBox.styled';\n\nexport const SearchBox = ({ bookName, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        autoFocus\n        type=\"text\"\n        value={bookName}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const List = styled.ul`\n  /* border: 2px solid black; */\n  margin-top: 20px;\n\n  /* display: grid; */\n  /* grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); */\n  /* grid-template-columns: repeat(auto-fill, minmax(250px, auto)); */\n  /* gap: 20px; */\n\n  li {\n    margin-bottom: 15px;\n    /* border: 1px solid black; */\n    border-radius: 5px;\n\n    img {\n      object-fit: cover;\n    }\n\n    p {\n      margin-top: 10px;\n      text-transform: lowercase;\n    }\n\n    :hover {\n      box-shadow: 0 0 10px #242124;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CardWrapperBlock = styled.div`\n  padding: 20px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (max-width: 400px) {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  button {\n    font-family: 'Josefin Sans', sans-serif;\n    border: none;\n    border-radius: 5px;\n    padding: 15px;\n    background-color: #242124;\n    width: 200px;\n    margin-bottom: 10px;\n    font-size: 17px;\n    color: #fff;\n    cursor: pointer;\n\n    transition: all 100ms ease-out;\n\n    :hover {\n      background-color: #752333;\n      box-shadow: 0 5px 10px #242124;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  @media (max-width: 400px) {\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    text-align: center;\n    align-items: center;\n  }\n`;\n\nexport const WrapperBookImg = styled.div`\n  width: 135px;\n  border: 2px solid #242124;\n  border-radius: 5px;\n  padding: 5px;\n  box-shadow: 0 5px 10px #242124;\n  text-align: center;\n\n  margin-right: 25px;\n  @media (max-width: 400px) {\n    margin-right: 0;\n  }\n\n  img {\n    border-radius: 5px;\n  }\n`;\n\nexport const DescriptionWrapper = styled.div`\n  div {\n    @media (max-width: 400px) {\n      display: none;\n    }\n  }\n`;\nexport const OptionsWrapper = styled.div`\n  text-align: center;\n  p {\n    margin-bottom: 10px;\n  }\n  @media (max-width: 670px) {\n    flex-wrap: wrap;\n    display: none;\n  }\n`;\n","import {\n  CardWrapperBlock,\n  DescriptionWrapper,\n  OptionsWrapper,\n  Wrapper,\n  WrapperBookImg,\n} from './CardWrapper.styled';\n\nimport defaultImg from '../../img/bookPlaceholder.png';\n\nexport const CardWrapper = ({ book }) => {\n  return (\n    <CardWrapperBlock>\n      <Wrapper>\n        <div>\n          <WrapperBookImg>\n            {book.volumeInfo.imageLinks ? (\n              <img\n                src={book.volumeInfo.imageLinks.thumbnail}\n                alt=\"book\"\n                width={135}\n              />\n            ) : (\n              <img src={defaultImg} alt=\"book\" width={135} />\n            )}\n          </WrapperBookImg>\n        </div>\n\n        <DescriptionWrapper>\n          <b> {book.volumeInfo.title}</b>\n          <div>\n            <p>author: {book.volumeInfo.authors}</p>\n            <p>categories : {book.volumeInfo.categories}</p>\n            <p>pageCount: {book.volumeInfo.pageCount}</p>\n            <p>publishedDate: {book.volumeInfo.publishedDate}</p>\n            <p>publisher: {book.volumeInfo.publisher}</p>\n            <p>language: {book.volumeInfo.language}</p>\n          </div>\n        </DescriptionWrapper>\n      </Wrapper>\n\n      {/* <CollectionButtons /> */}\n\n      <OptionsWrapper>\n        <p>Not in collection</p>\n        <button type=\"button\">Want to read</button>\n      </OptionsWrapper>\n    </CardWrapperBlock>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nimport { List } from 'components/BooksList/BookList.styled';\nimport { CardWrapper } from 'components/CardWrapper/CardWrapper';\n\nexport const BookList = ({ books }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {books.map(book => {\n        // console.log(book.primary_isbn10);\n        return (\n          <li key={book.etag}>\n            <Link to={`${book.id}`} state={{ from: location }}>\n              {/* <div>\n                <img src={book.volumeInfo.imageLinks.thumbnail} alt=\"book\" />\n                <p> {book.volumeInfo.title}</p>\n              </div>\n\n              <div>info about book</div> */}\n              <CardWrapper book={book} />\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","// import { Header } from 'components/main/Header/Header';\nimport { fetch } from 'fetch';\nimport { useEffect, useState } from 'react';\n\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { BookList } from 'components/BooksList/BooksList';\nimport { getSearchBook } from 'fetch';\n\nconst Home = () => {\n  const [books, setBooks] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const bookName = searchParams.get('name') ?? '';\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  // const visibleBooks = books.filter(book => {\n  //   if (bookName || bookName === '') {\n  //     return book;\n  //   }\n  //   return book.volumeInfo.title.toLowerCase().includes(bookName.toLowerCase());\n  // });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (bookName) {\n          const data = await getSearchBook(bookName);\n          // console.log(data);\n          if (data) {\n            return setBooks(data);\n          }\n          return setBooks([]);\n        } else {\n          const data = await fetch();\n          // console.log(data);\n\n          if (data) {\n            return setBooks(data);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [bookName]);\n\n  return (\n    <main>\n      <SearchBox bookName={bookName} onChange={updateQueryString} />\n      {books.length !== 0 && <BookList books={books} />}\n      {/* <Header /> */}\n      {/* <h2>Best Sellers:</h2>\n      <TrendingList books={books} /> */}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["Wrapper","styled","Input","Icon","HiSearch","SearchBox","bookName","onChange","autoFocus","type","value","e","target","List","CardWrapperBlock","WrapperBookImg","DescriptionWrapper","OptionsWrapper","CardWrapper","book","volumeInfo","imageLinks","src","thumbnail","alt","width","defaultImg","title","authors","categories","pageCount","publishedDate","publisher","language","BookList","books","location","useLocation","map","to","id","state","from","etag","useState","setBooks","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchData","getSearchBook","data","fetch","console","log","name","length"],"sourceRoot":""}