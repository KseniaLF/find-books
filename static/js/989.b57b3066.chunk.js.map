{"version":3,"file":"static/js/989.b57b3066.chunk.js","mappings":"oSAMaA,EAAUC,EAAAA,GAAAA,IAAH,w/BAsDPC,EAAQD,EAAAA,GAAAA,MAAH,g8B,IAyCEA,EAAAA,EAAAA,IAAOE,EAAAA,IAAPF,CAAH,+F,QCnFJG,EAAY,SAAC,GAAyB,IAAD,IAAtBC,EAAsB,EAAtBA,gBAG1B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQ,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GACvCC,EAAa,UAAGJ,EAAaG,IAAI,iBAApB,QAAiC,GA8EpD,OACE,SAACV,EAAD,WAkCE,iBAAMY,SAvGW,SAAAC,GACnBA,EAAEC,iBAGFT,EAAgBI,EACjB,EAkGG,UACE,SAACP,EAAD,CACEa,YAAY,eACZC,WAAS,EACTC,KAAK,OACLC,MAAOT,EACPU,SAtGkB,SAAAN,GAGxB,IAAMO,EAAOP,EAAEQ,OAAOH,MAUtBV,EANIG,GAAiBS,EACX,CAAEE,OAAQX,EAAeS,KAAMA,GAE/BA,GAAQ,CAAEA,KAAMA,GA0B3B,OAwEF,E,UCtIYG,G,gBAAOtB,EAAAA,GAAAA,GAAH,8gB,GA2BSA,EAAAA,GAAAA,IAAH,wH,SC1BVuB,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACJ,EAAD,UACGE,EAAMG,KAAI,SAAAC,GAET,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAAvC,UACE,SAACQ,EAAA,EAAD,CAAaL,KAAMA,OAFdA,EAAKM,KAMjB,OAIR,E,UCiBD,EA3CmB,WAAO,IAAD,EACvB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAcY,EAAd,KAEA,GAAuB/B,EAAAA,EAAAA,MACjBgC,EAAW,WADjB,eACiC5B,IAAI,eAApB,QAA+B,GAChD,GAAgC0B,EAAAA,EAAAA,UAASE,GAAzC,eAAO7B,EAAP,KAAiB8B,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WAGR,IAAMC,EAAS,mCAAG,iGAEVhC,EAFU,kCAGOiC,EAAAA,EAAAA,IAAcjC,GAHrB,UAGNkC,EAHM,OAIZC,QAAQC,IAAIF,IACRA,EALQ,uBAMVN,EAASM,GANC,mDAULN,EAAS,KAVJ,0DAadO,QAAQC,IAAR,MAbc,0DAAH,qDAiBfJ,GACD,GAAE,CAAChC,IAOJ,OACE,UAAC,IAAD,YACE,SAACL,EAAD,CAAWC,gBAPY,SAAAa,GACzB0B,QAAQC,IAAI3B,GACZqB,EAAYrB,EACb,KAKG,SAACM,EAAD,CAAUC,MAAOA,MAGtB,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/BooksList/BookList.styled.jsx","components/BooksList/BooksList.jsx","pages/SearchPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n// import { DebounceInput } from 'react-debounce-input';\n\n// import { Input } from 'antd';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  /* flex-wrap: wrap; */\n  /* text-align: center; */\n  justify-content: center;\n  /* align-items: center; */\n\n  /* max-width: 400px; */\n  /* justify-content: center; */\n  align-items: center;\n  position: relative;\n  text-transform: uppercase;\n\n  /* max-width: 300px; */\n  margin: 0 auto;\n  margin-bottom: 16px;\n\n  input {\n    /* background-color: red; */\n    /* font-size: 80px; */\n    /* font-weight: 700; */\n  }\n  form {\n    /* width: 100%; */\n    max-width: 250px;\n    /* display: flex; */\n  }\n\n  ul {\n    position: absolute;\n    z-index: 99;\n    left: 0;\n    top: 45px;\n    width: 100%;\n    background-color: white;\n    box-shadow: 0 5px 5px rgb(97, 111, 85);\n    border-radius: 5px;\n    max-height: 200px;\n    height: auto;\n    overflow: auto;\n\n    li {\n      padding: 5px 10px;\n      text-transform: lowercase;\n\n      :hover {\n        background-color: #e7ecec;\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  /* font-size: 15px; */\n  font: inherit;\n  padding: 8px 32px 5px 12px;\n\n  width: 100%;\n  /* height: 45px; */\n  border-radius: 5px;\n  border-color: rgb(97, 111, 85);\n  border: 1.5px solid rgb(97, 111, 85);\n  outline: none;\n  /* background-color: transparent; */\n  /* border-radius: 10px; */\n  /* padding: 8px 32px 8px 12px; */\n  /* width: 100%; */\n  /* height: 45px; */\n  /* padding: 8px 32px 8px 12px;\n  border-color: rgb(97, 111, 85);\n  font: inherit;\n  background-color: transparent;\n  outline: none; */\n  /* background-color: red; */\n\n  /* fill: red; */\n  /* span { */\n  /* :hover {\n    border-radius: 20px;\n    background-color: transparent;\n  } */\n  /* border: none; */\n  /* :hover { */\n  /* border: 5px solid red; */\n  /* border-color: red; */\n  /* } */\n  :focus {\n    /* outline: 1px solid rgb(97, 111, 85); */\n    box-shadow: 0 5px 5px rgb(97, 111, 85);\n    /* border-radius: 20px; */\n  }\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 7px;\n`;\n","// import { useState } from 'react';\nimport { Wrapper, Input } from './SearchBox.styled';\n// import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n// import Select from 'react-select';\n\n// const handleChange = value => {\n//   console.log(`selected ${value}`);\n// };\n\n// const options = [\n//   { value: 'intitle', label: 'title' },\n//   { value: 'inauthor', label: 'author' },\n//   { value: 'subject', label: 'subject' },\n//   { value: 'isbn', label: 'isbn' },\n// ];\n\nexport const SearchBox = ({ getVisibleBooks }) => {\n  // const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const bookName = searchParams.get('name') ?? '';\n  const optionsParams = searchParams.get('option') ?? '';\n  // console.log(searchParams);\n\n  // const initialParam = optionsParams && {\n  //   value: optionsParams,\n  //   label: optionsParams,\n  // };\n\n  // const [selectedOption, setSelectedOption] = useState(initialParam);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // setIsOpen(false);\n    // console.log(54545454545454545);\n    getVisibleBooks(bookName);\n  };\n\n  const handleChangeInput = e => {\n    // console.log('handleChangeInput:');\n    // e.target.value;\n    const name = e.target.value;\n    // const nextParams = name !== '' ? { name } : {};\n    let param = {};\n\n    if (optionsParams && name) {\n      param = { option: optionsParams, name: name };\n    } else {\n      param = name && { name: name };\n    }\n\n    setSearchParams(param);\n    // handle(nextParams);\n    // if (name !== '') {\n    //   const nextParams = { name };\n    //   setSearchParams(nextParams);\n    // }\n\n    // const fetchData = async () => {\n    //   try {\n    //     if (name) {\n    //       const data = await getSearchBook(name);\n    //       // console.log(data);\n    //       if (data) {\n    //         return setBooks(data);\n    //       }\n    //       return setBooks([]);\n    //     }\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // };\n\n    // fetchData();\n  };\n\n  // const handleChange = selectedOption => {\n  //   // console.log(selectedOption);\n  //   const option = selectedOption.value;\n  //   setSelectedOption(selectedOption);\n  //   // const nextParams = option !== '' ? { option } : {};\n  //   // setSearchParams({ option: option, name: bookName });\n  //   // setSelectedOption(option);\n\n  //   let param = {};\n  //   if (bookName && option) {\n  //     param = { option: option, name: bookName };\n  //   } else {\n  //     param = option && { option: option };\n  //   }\n  //   setSearchParams(param);\n  //   // handle(nextParams);\n  // };\n\n  // const handle = ({ option, name }) => {\n  //   const params = { name, option };\n  //   console.log('params:', params);\n  // };\n\n  return (\n    <Wrapper>\n      {/* <Select\n        placeholder=\"search by..\"\n        value={selectedOption}\n        // defaultValue=\"g\"\n        onChange={handleChange}\n        // defaultValue={{ label: optionsParams }}\n        options={options}\n        styles={{\n          control: (baseStyles, state) => ({\n            ...baseStyles,\n            backgroundColor: 'transparent',\n            width: 150,\n            borderRadius: 5,\n            // fontSize: 20,\n            textTransform: 'lowercase',\n          }),\n          option: (baseStyles, state) => ({\n            ...baseStyles,\n            textTransform: 'lowercase',\n            // backgroundColor: 'transparent',\n          }),\n        }}\n        theme={theme => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n            ...theme.colors,\n            primary25: 'rgba(97, 111, 85, 0.57)',\n            primary: 'rgb(97, 111, 85)',\n          },\n        })}\n      /> */}\n\n      <form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"find book...\"\n          autoFocus\n          type=\"text\"\n          value={bookName}\n          onChange={handleChangeInput}\n          // onClick={handleInputClick}\n        />\n      </form>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\n/*export const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`; */\n\nexport const List = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  /* grid-template-columns: repeat(auto-fill, minmax(250px, auto)); */\n  gap: 10px;\n\n  li {\n    text-align: center;\n    border-radius: 5px;\n\n    img {\n      object-fit: cover;\n      transition: all 150ms ease-out;\n    }\n\n    :hover img {\n      transform: scale(1.05);\n      /* box-shadow: 0 0 10px #242124; */\n    }\n\n    :hover div::after {\n      opacity: 0;\n    }\n  }\n`;\n\nexport const SliderItem = styled.div`\n  /* margin-right: 10px; */\n  /* padding: px; */\n  /* background-color: rgb(97, 111, 85); */\n`;\n","import { Link, useLocation } from 'react-router-dom';\n// import Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nimport {\n  List,\n  // SliderItem,\n  // SliderWrapper,\n} from 'components/BooksList/BookList.styled';\nimport { CardWrapper } from 'components/CardWrapper/CardWrapper';\n// import { SliderBlock } from 'components/Slider/Slider';\n// import { useEffect } from 'react';\n// import { useState } from 'react';\n\nexport const BookList = ({ books }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {books.map(book => {\n          // console.log(book.primary_isbn10);\n          return (\n            <li key={book.etag}>\n              <Link to={`${book.id}`} state={{ from: location }}>\n                <CardWrapper book={book} />\n              </Link>\n            </li>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getSearchBook } from 'fetch';\n\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { BookList } from 'components/BooksList/BooksList';\nimport { Container } from 'components/App/App.styled';\n\nconst SearchPage = () => {\n  const [books, setBooks] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n  const initialName = searchParams.get('name') ?? '';\n  const [bookName, setBookName] = useState(initialName);\n\n  useEffect(() => {\n    // setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        if (bookName) {\n          const data = await getSearchBook(bookName);\n          console.log(data);\n          if (data) {\n            setBooks(data);\n            // setIsLoading(false);\n            return;\n          }\n          return setBooks([]);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [bookName]);\n\n  const handleVisibleBooks = value => {\n    console.log(value);\n    setBookName(value);\n  };\n\n  return (\n    <Container>\n      <SearchBox getVisibleBooks={handleVisibleBooks} />\n      <BookList books={books} />\n    </Container>\n  );\n};\n\nexport default SearchPage;\n"],"names":["Wrapper","styled","Input","HiSearch","SearchBox","getVisibleBooks","useSearchParams","searchParams","setSearchParams","bookName","get","optionsParams","onSubmit","e","preventDefault","placeholder","autoFocus","type","value","onChange","name","target","option","List","BookList","books","location","useLocation","map","book","to","id","state","from","CardWrapper","etag","useState","setBooks","initialName","setBookName","useEffect","fetchData","getSearchBook","data","console","log"],"sourceRoot":""}